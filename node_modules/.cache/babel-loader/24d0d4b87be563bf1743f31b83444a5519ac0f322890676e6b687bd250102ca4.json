{"ast":null,"code":"var _jsxFileName = \"/Users/pyaephyoshan/programming/test/showreel-frontend/src/components/VideoClipList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoClipList = ({\n  showReel,\n  clips\n}) => {\n  _s();\n  const updatedClips = clips;\n  const [videoClips, setVideoClips] = useState([]);\n\n  // No need for useEffect to fetch clips if they are passed as props\n\n  const handleRemoveClip = async clipId => {\n    try {\n      await axios.delete(`/show_reels/${showReel.id}/clips/${clipId}`);\n      // Remove the clip from the 'clips' array passed as props\n      updatedClips = updatedClips.filter(clip => clip.id !== clipId);\n      setVideoClips(updatedClips); // Update state to reflect the removal\n    } catch (error) {\n      console.error('Error removing video clip:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: clips.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [showReel.name, \" - Video Clips\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clips.map(clip =>\n        /*#__PURE__*/\n        // Use the 'clips' prop directly here\n        _jsxDEV(\"li\", {\n          children: [clip.name, \" (\", clip.start_timecode, \" - \", clip.end_timecode, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveClip(clip.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, clip.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoClipList, \"m2/B63VjtMOWrt8irSTq7bC7Omc=\");\n_c = VideoClipList;\nexport default VideoClipList;\nvar _c;\n$RefreshReg$(_c, \"VideoClipList\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VideoClipList","showReel","clips","_s","updatedClips","videoClips","setVideoClips","handleRemoveClip","clipId","delete","id","filter","clip","error","console","children","length","name","fileName","_jsxFileName","lineNumber","columnNumber","map","start_timecode","end_timecode","onClick","_c","$RefreshReg$"],"sources":["/Users/pyaephyoshan/programming/test/showreel-frontend/src/components/VideoClipList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst VideoClipList = ({ showReel, clips }) => {\n\n  const updatedClips = clips;\n  const [videoClips, setVideoClips] = useState([]);\n\n  // No need for useEffect to fetch clips if they are passed as props\n\n\n\n  const handleRemoveClip = async (clipId) => {\n    try {\n      await axios.delete(`/show_reels/${showReel.id}/clips/${clipId}`);\n      // Remove the clip from the 'clips' array passed as props\n      updatedClips = updatedClips.filter(clip => clip.id !== clipId);\n      setVideoClips(updatedClips); // Update state to reflect the removal\n    } catch (error) {\n      console.error('Error removing video clip:', error);\n    }\n  };\n  \n  \n\n  return (\n    <div>\n      {clips.length > 0  && (\n        <div>\n          <h3>{showReel.name} - Video Clips</h3>\n          <ul>\n            {clips.map((clip) => ( // Use the 'clips' prop directly here\n              <li key={clip.id}>\n                {clip.name} ({clip.start_timecode} - {clip.end_timecode})\n                <button onClick={() => handleRemoveClip(clip.id)}>Remove</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoClipList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAE7C,MAAMC,YAAY,GAAGF,KAAK;EAC1B,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEhD;;EAIA,MAAMW,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAMX,KAAK,CAACY,MAAM,CAAC,eAAeR,QAAQ,CAACS,EAAE,UAAUF,MAAM,EAAE,CAAC;MAChE;MACAJ,YAAY,GAAGA,YAAY,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKF,MAAM,CAAC;MAC9DF,aAAa,CAACF,YAAY,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAID,oBACEd,OAAA;IAAAgB,QAAA,EACGb,KAAK,CAACc,MAAM,GAAG,CAAC,iBACfjB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,GAAKd,QAAQ,CAACgB,IAAI,EAAC,gBAAc;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCtB,OAAA;QAAAgB,QAAA,EACGb,KAAK,CAACoB,GAAG,CAAEV,IAAI;QAAA;QAAO;QACrBb,OAAA;UAAAgB,QAAA,GACGH,IAAI,CAACK,IAAI,EAAC,IAAE,EAACL,IAAI,CAACW,cAAc,EAAC,KAAG,EAACX,IAAI,CAACY,YAAY,EAAC,GACxD,eAAAzB,OAAA;YAAQ0B,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACK,IAAI,CAACF,EAAE,CAAE;YAAAK,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF1DT,IAAI,CAACF,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCIH,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}